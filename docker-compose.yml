version: '3.8'
services:
  # Create frontend container
  frontend: # Name of our service
    build: ./frontend # path to dockerfile
    ports: # Port binding to host from docker container
      - 80:80 # Bind port 80 of host to 80 of container
    environment:
      - BACKEND_SERVER_URL
      - LOBBY_SERVER_URL
      - GAME_SERVER_URL
      - CHAT_SERVER_URL
      - REDIRECT_URI_42_API
    container_name: frontend-docker
    restart: always # What to do if container crashes
    depends_on:
      - backend
    networks:
      - transcendence
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
  # Create backend container
  backend:
    # Create backend container  
    build: ./backend
    expose:
      - BACKEND_PORT # Expose port 3370 to other containers
    ports:
      # - ${BACKEND_PORT}:3000 # For debugging - Bind port 3370 of host to 3370 of container
      - "5555:5555" # For debugging - access to prisma studio 
    environment:
      - DATABASE_URL
      - JWT_SECRET
      - BACKEND_PORT
      - FORTYTWO_CLIENT_ID
      - FORTYTWO_CLIENT_SECRET
      - FORTYTWO_CALLBACK_URL
      - FRONTEND_REDIRECT_URL
    container_name: backend-docker
    restart: always
    depends_on:
      - db
    networks:
      - transcendence
  # Create database container
  db:
    image: postgres:alpine
    container_name: ${POSTGRES_CONTAINER_NAME}
    expose:
      - POSTGRES_PORT
    ports:
      - ${POSTGRES_PORT}:5432
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    networks:
      - transcendence
    volumes:
      - postgres_data:/var/lib/postgresql/data
networks:
  transcendence:

volumes:
  postgres_data:
    driver: local
    driver_opts:
      type: none
      device: /home/${USER}/data/postgres
      o: bind
